name: Build and Release Docker Images

on:
  push:
    tags: [ 'v*' ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: lucchmielowski

jobs:
  build-service-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    strategy:
      matrix:
        service: [emojivoto-web, emojivoto-emoji-svc, emojivoto-voting-svc]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract version from tag
      id: version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "major_minor=${VERSION%.*}" >> $GITHUB_OUTPUT
          echo "major=${VERSION%%.*}" >> $GITHUB_OUTPUT
        else
          echo "version=latest" >> $GITHUB_OUTPUT
          echo "major_minor=latest" >> $GITHUB_OUTPUT
          echo "major=latest" >> $GITHUB_OUTPUT
        fi

    - name: Build and push service image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile-multi-arch
        platforms: linux/amd64
        push: true
        build-args: |
          svc_name=${{ matrix.service }}
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.service }}:${{ steps.version.outputs.version }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.service }}:${{ steps.version.outputs.major_minor }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.service }}:${{ steps.version.outputs.major }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.service }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  build-multi-arch-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    strategy:
      matrix:
        service: [emojivoto-web, emojivoto-emoji-svc, emojivoto-voting-svc]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract version from tag
      id: version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "major_minor=${VERSION%.*}" >> $GITHUB_OUTPUT
          echo "major=${VERSION%%.*}" >> $GITHUB_OUTPUT
        else
          echo "version=latest" >> $GITHUB_OUTPUT
          echo "major_minor=latest" >> $GITHUB_OUTPUT
          echo "major=latest" >> $GITHUB_OUTPUT
        fi

    - name: Build and push multi-arch image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile-multi-arch
        platforms: linux/amd64,linux/arm64,linux/arm/v7
        push: true
        build-args: |
          svc_name=${{ matrix.service }}
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.service }}:${{ steps.version.outputs.version }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.service }}:${{ steps.version.outputs.major_minor }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.service }}:${{ steps.version.outputs.major }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.service }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
